name: CI-Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:

  test:
    name: Test
    runs-on: ubuntu-latest

    services: 
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: aksara2025
          POSTGRES_DB: aksara_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '^1.24'
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    - name: Install golang-migrate
      run: |
        curl -L https://github.com/golang-migrate/migrate/releases/download/v4.16.2/migrate.linux-amd64.tar.gz | tar xvz
        sudo mv migrate /usr/bin/migrate
        which migrate

    - name: Run migrations
      run: make migrate-up DB_URL="${{ secrets.DB_SOURCE_TEST }}"

    - name: Import location assets
      run: make import-loc-assets DB_URL="${{ secrets.DB_SOURCE_TEST }}"

    - name: Set test environment variables
      run: |
        touch app.env
        echo "DB_SOURCE_TEST=${{ vars.DB_SOURCE_TEST }}" >> app.env
        cat app.env

    - name: Test
      run: make test